[{"path":"https://loganjohnson0.github.io/foodRecall/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 foodRecall authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/articles/foodRecall.html","id":"backgroundmotivation","dir":"Articles","previous_headings":"","what":"Background/Motivation","title":"Access and visualize FDA food recall data","text":"project motivated need visualization healthcare, especially food-related problems. many instances, one hears foodborne illnesses new, unclear R package contains code, data, documentation foodborne outbreaks happened United States recent decade. package helps highlight city, state, country, time outbreak occurred.","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/articles/foodRecall.html","id":"functions-and-applications","dir":"Articles","previous_headings":"","what":"Functions and applications","title":"Access and visualize FDA food recall data","text":"package allows user input date range dates order see types food recalls occurred within certain interval time. instance, example displays food recalls specified location first 4 months 2023. ## Limitations Currently, package provides information relating foodborne disease outbreaks United States.future, beneficial expand package include foodborne illness statistics across globe. manner, easy efficient compare illness rates foodborne diseases different countries. Furthermore, possible track, model, predict spread foodborne illnesses move nation nation, lead early government intervention containing spread various illnesses. One complication , however, global database require combination analysis large number datasets. Due , fact many nations consistently track disease statistics, quite ambitious.","code":"library(foodRecall)  # Before running any of the package functions, the user will need an API key. # To get the API key, go to https://open.fda.gov/apis/authentication/. It is free, only requires # an email address, and you will get it immediately.Do not share your API key with anyone.  # api_key <- \"YOUR API KEY\"  ## Get food recall locations  # location <- foodRecall::recall_location(api_key = api_key, limit = 1000, city = \"Kansas City, Ames\", state = \"Iowa, Missouri\")   ## Map food recall locations  # map_recall() # map <- foodRecall::map_recall(data = location)  ## Working with food recall dates # recall_date()   # date <- foodRecall::recall_date(api_key = api_key,  #                                report_date = \"January 2023 to May 2023\")"},{"path":"https://loganjohnson0.github.io/foodRecall/articles/foodRecall.html","id":"future-work","dir":"Articles","previous_headings":"","what":"Future Work","title":"Access and visualize FDA food recall data","text":"future, optimal try combine package information, agricultural data United States Department Agriculture (USDA) . One original ideas project dealt analyzing crop progress data USDA’s National Agricultural Statistics Service (NASS). service provides information statistics crop planting, germination, harvest, etc. Many foodborne illness outbreaks initiate bacteria, fungi, insects emerge certain crop development stages. food-borne illness crop progress statistics combined analyzed together package, much easier organizations FDA predict severity food-borne illnesses develop measures prevention. also useful tool farmers others whose work entails key role prevention diseases, application herbicides agricultural chemicals. Additional agricultural statistics livestock facilities combined data sets order provide complete picture livestock yields time impacted rates foodborne illnesses salmonella. Another possibility future improvement package addition feature enables users track areas featured origin food-borne illnesses. high-risk areas can identified simply keeping count number cases certain disease time, easy pinpoint many diseases originating prevent spread diseases. Essentially, expansions package enable governmental organizations work together joint projects relating food safety. Finally, additional functionality created allows combination food-borne illness data disease related data. sense, useful healthcare professionals treating illnesses may interested treatment options rather origin disease. Hence, useful develop functionality regards symptoms symptom severity relates diseases interest.","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Logan Johnson. Author, maintainer. Kelly Nascimento Thompson. Author. Matthew Kavanaugh. Author. Charchit Shukla. Author.","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Johnson L, Nascimento Thompson K, Kavanaugh M, Shukla C (2023). foodRecall: Extracts Visualizes Food Recall Data. https://github.com/loganjohnson0/foodRecall, https://loganjohnson0.github.io/foodRecall/.","code":"@Manual{,   title = {foodRecall: Extracts and Visualizes Food Recall Data},   author = {Logan Johnson and Kelly {Nascimento Thompson} and Matthew Kavanaugh and Charchit Shukla},   year = {2023},   note = {https://github.com/loganjohnson0/foodRecall, https://loganjohnson0.github.io/foodRecall/}, }"},{"path":[]},{"path":"https://loganjohnson0.github.io/foodRecall/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Extracts and Visualizes Food Recall Data","text":"","code":"# install.packages(\"devtools\") library(devtools)  devtools::install.github(\"loganjohnson0/foodRecall\")  library(foodRecall)"},{"path":"https://loganjohnson0.github.io/foodRecall/index.html","id":"introduction","dir":"","previous_headings":"","what":"Introduction","title":"Extracts and Visualizes Food Recall Data","text":"use package, must register API key openFDA website. free API key requires email address. receive immediately upon request. Upon issues API key , please contact openFDA office. sure share API key anyone! product uses openFDA API endorsed certified Food Drug Administration.","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/index.html","id":"save-your-api-key","dir":"","previous_headings":"","what":"Save Your API Key","title":"Extracts and Visualizes Food Recall Data","text":"developed different functions search different kinds data. can use either recall_location recall_date search data food recalls. See notation example. can also map resulting data see location recall events, impact recall, number recall events individual products recalling firm recalled. basic output map_recall function. output interactive map leaflet include detailed descriptions map.  Check back additional updates plan add soon!","code":"api_key <- \"YOUR API KEY\" location <- foodRecall::recall_location(api_key = api_key,                                          city = \"Ames\",                                          state = \"Iowa\")  date <- foodRecall::recall_date(api_key = api_key,                                 report_date = \"January 2023 to May 2023\") foodRecall::map_recall(data = df)"},{"path":"https://loganjohnson0.github.io/foodRecall/reference/adverse_events.html","id":null,"dir":"Reference","previous_headings":"","what":"This function scrapes the FDA website for food product recall data — adverse_events","title":"This function scrapes the FDA website for food product recall data — adverse_events","text":"function scrapes FDA website food product recall data","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/adverse_events.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function scrapes the FDA website for food product recall data — adverse_events","text":"","code":"adverse_events(   api_key,   consumer.gender = NULL,   consumer.age = NULL,   consumer.age_unit = NULL,   date_created = NULL,   date_started = NULL,   limit = NULL,   outcomes = NULL,   products.name_brand = NULL,   products.industry_name = NULL,   products.industry_code = NULL,   reactions = NULL,   report_number = NULL )"},{"path":"https://loganjohnson0.github.io/foodRecall/reference/adverse_events.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function scrapes the FDA website for food product recall data — adverse_events","text":"api_key free api key FDA website consumer.gender way FDA classifies date consumer.age Description product consumer.age_unit Date recall initiated date_created company recalling product date_started date FDA issued enforcement report product recall limit number rows return query outcomes gives user flexibility search exact matches inputs combination inputs products.name_brand status recall products.industry_name date recall terminated products.industry_code date recall terminated reactions date recall terminated report_number date recall terminated","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/map_recall.html","id":null,"dir":"Reference","previous_headings":"","what":"Function for getting lat and long data from addresses — map_recall","title":"Function for getting lat and long data from addresses — map_recall","text":"Function getting lat long data addresses","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/map_recall.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function for getting lat and long data from addresses — map_recall","text":"","code":"map_recall(data)"},{"path":"https://loganjohnson0.github.io/foodRecall/reference/map_recall.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function for getting lat and long data from addresses — map_recall","text":"data dataframe used input addresses map latitude longitudinally","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/recall_date.html","id":null,"dir":"Reference","previous_headings":"","what":"This function scrapes the FDA website for food product recall data — recall_date","title":"This function scrapes the FDA website for food product recall data — recall_date","text":"function scrapes FDA website food product recall data","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/recall_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function scrapes the FDA website for food product recall data — recall_date","text":"","code":"recall_date(   api_key,   center_classification_date = NULL,   limit = NULL,   product_description = NULL,   recall_initiation_date = NULL,   recalling_firm = NULL,   report_date = NULL,   search_mode = NULL,   status = NULL,   termination_date = NULL )"},{"path":"https://loganjohnson0.github.io/foodRecall/reference/recall_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function scrapes the FDA website for food product recall data — recall_date","text":"api_key free api key FDA website center_classification_date way FDA classifies date limit number rows return query product_description Description product recall_initiation_date Date recall initiated recalling_firm company recalling product report_date date FDA issued enforcement report product recall search_mode gives user flexibility search exact matches inputs combination inputs status status recall termination_date date recall terminated","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/recall_location.html","id":null,"dir":"Reference","previous_headings":"","what":"This function scrapes the FDA website for food product recall data — recall_location","title":"This function scrapes the FDA website for food product recall data — recall_location","text":"function scrapes FDA website food product recall data","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/recall_location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function scrapes the FDA website for food product recall data — recall_location","text":"","code":"recall_location(   api_key,   limit = NULL,   city = NULL,   country = NULL,   distribution_pattern = NULL,   recalling_firm = NULL,   search_mode = NULL,   state = NULL,   status = NULL )"},{"path":"https://loganjohnson0.github.io/foodRecall/reference/recall_location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function scrapes the FDA website for food product recall data — recall_location","text":"api_key free api key FDA website limit number rows return query city City food produced country country food produced distribution_pattern Locations food distributed recalling_firm company recalling product search_mode gives user flexibility search exact matches inputs combination inputs state U.S. state recalling firm located status status recall","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/runExample.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to run the shiny app — runExample","title":"Function to run the shiny app — runExample","text":"Function run shiny app","code":""},{"path":"https://loganjohnson0.github.io/foodRecall/reference/runExample.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to run the shiny app — runExample","text":"","code":"runExample(x)"},{"path":"https://loganjohnson0.github.io/foodRecall/reference/runExample.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to run the shiny app — runExample","text":"x shiny app run","code":""}]
